{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/App/App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","type","name","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","entries","val","App","state","handleDecrement","e","console","dir","target","setState","totalCount","Math","floor","className","this","shortid","generate","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SASeA,EATC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,oCACI,6BAAKD,IACJC,MCQMC,EATS,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBAGhC,OAAQC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OAC5B,wBAAkBC,KAAK,SAASC,KAAMF,EAAKG,QAASP,EAApD,SAAsEI,GAAzDA,O,QCLfI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,8BACA,6BAAKA,OA6BMC,EAxBI,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAMC,EAAwB,EAAxBA,mBAE3C,OAAID,EAAQ,EACD,qCACH,4CACA,gCACKb,OAAOe,QAAQ,CAAEL,OAAMC,UAASC,QAAOV,KAAI,mCAAEC,EAAF,KAAOa,EAAP,YACxC,8BAAeb,EAAf,KAAqB,+BAAOa,MAApBb,MAEZ,wCAAwB,+BAAOU,MAAvB,SACR,oDAAsC,+BAAOC,MAArC,iBAIT,qCACH,4CACA,cAAC,EAAD,CAAcN,QAAS,0BCwCpBS,E,4MAxDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,gBAAkB,SAAAC,GAChBC,QAAQC,IAAIF,EAAEG,OAAOlB,MACrB,IAAMkB,EAASH,EAAEG,OAAOlB,KACH,oBAAVkB,EAIX,EAAKC,UAAS,iCACXJ,EAAEG,OAAOlB,KAAO,EAAKa,MAAME,EAAEG,OAAOlB,MAAQ,MAJ7CgB,QAAQC,IAAIC,I,EAQhBE,WAAa,WACX,MAA+B,EAAKP,MAGpC,OAHA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAMzBE,mBAAqB,WAEnB,OAAI,EAAKW,aAAe,EACFC,KAAKC,MAAyB,IAAlB,EAAKT,MAAMR,KAAc,EAAKe,cAOzD,G,4CAGT,WACE,OACE,qBAA8BG,UAAU,YAAxC,SACE,eAAC,EAAD,CAASjC,MAAO,wBAAhB,UACE,cAAC,EAAD,CAAiBG,QAAS+B,KAAKX,MAAOnB,gBAAiB8B,KAAKV,kBAC5D,cAAC,EAAD,CACET,KAAMmB,KAAKX,MAAMR,KACjBC,QAASkB,KAAKX,MAAMP,QACpBC,IAAKiB,KAAKX,MAAMN,IAChBC,MAAOgB,KAAKJ,aACZX,mBAAoBe,KAAKf,2BARrBgB,IAAQC,gB,GAzCNC,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bb6a8971.chunk.js","sourcesContent":["const Section = ({ title, children }) => (\n    <section>\n        <h1>{title}</h1>\n        {children}\n    </section>\n    \n);\n\n\nexport default Section;","import React from 'react';\n\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\n    // console.log(options);\n   \n   return( Object.keys(options).map((key) => (\n        <button key={key} type=\"button\" name={key} onClick={onLeaveFeedback}>{key}</button>\n   ))\n   )\n}\n\nexport default FeedbackOptions;\n","\nconst Notification = ({ message}) => (\n    <div>\n    <h4>{message}</h4>\n        {/* {children} */}\n        </div>\n);\n\nconst Statistics = ({good, neutral, bad, total,positivePercentage}) => {\n    // console.log({good, neutral, bad});\n    if (total > 0) {\n        return <>\n            <h2>Statistics</h2>\n            <div>\n                {Object.entries({ good, neutral, bad }).map(([key, val]) => (\n                    <p key={key} >{key}: <span>{val}</span></p>\n                ))}\n                <p key={'total'}>Total: <span>{total}</span></p>\n                <p key={'percent'}>Positive feedback: <span>{positivePercentage}</span></p>\n            </div>\n        </>\n    } else {\n        return <>\n            <h2>Statistics</h2>\n            <Notification message={\"No feedback given\"} />\n            </>\n    }\n\n    \n}\n\n\nexport default Statistics;\n\n\n// return (\n//         <>\n//             <h2>Statistics</h2>\n            \n\n//             {/* {total > 0 ? ( <div>\n//             {Object.entries({ good, neutral, bad }).map(([key, val]) => (\n//                 <p key={key} >{key}: <span>{val}</span></p>\n//             ))}\n//             <p key={'total'}>Total: <span>{total}</span></p>\n//             <p key={'percent'}>Positive feedback: <span>{positivePercentage}</span></p>\n//             </div>) : (<Notification message={\"No feedback given\"} />)\n         \n//             } */}\n           \n//         </>)","import '../App/App.css';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Section from '../Section';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Statistics from '../Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleDecrement = e => {\n    console.dir(e.target.name);\n    const target = e.target.name;\n    if (typeof target == 'undefined') {\n      console.dir(target);\n      return;\n    }\n    this.setState(() => ({\n      [e.target.name]: this.state[e.target.name] + 1,\n    }));\n  };\n\n  totalCount = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    // console.log(this.state.good);\n    return total;\n  };\n\n  positivePercentage = () => {\n    // console.log(this.totalCount());\n    if (this.totalCount() > 0) {\n      const positivPerc = Math.floor((this.state.good * 100) / this.totalCount());\n      // console.log(positivPerc);\n      return positivPerc;\n    }\n    // or to the string - so, we can do whith out isNaN\n    // const positivPerc = `${Math.floor((this.state.good * 100) / this.totalCount())}`;\n    // console.log(positivPerc.length);\n    return 0;\n  };\n\n  render() {\n    return (\n      <div key={shortid.generate()} className=\"container\">\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.handleDecrement} />\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.totalCount()}\n            positivePercentage={this.positivePercentage()}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}