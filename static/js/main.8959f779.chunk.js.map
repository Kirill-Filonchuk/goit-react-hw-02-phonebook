{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.js","index.js"],"names":["Form","state","name","number","handleChange","event","currentTarget","value","console","log","setState","handleSubmit","e","preventDefault","props","formSubmitHandler","reset","onSubmit","this","type","pattern","title","required","onChange","Component","Filter","ContactList","visibleContact","onDeleteCont","map","id","onClick","App","contact","initialContact","filter","cont","shortid","generate","checkName","Object","values","some","item","alert","prevState","changeFilter","con","normalizedFilter","toLowerCase","includes","className","ContactForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8959f779.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import shortid from 'shortid';\r\nclass Form extends Component {\r\n    state = {\r\n     name: '',\r\n    number: '',\r\n    }\r\n    \r\n handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    console.log(event.currentTarget);\r\n    // используем вычисляемые св-ва\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n    };\r\n    \r\n      handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    console.log(`\r\n      name: ${name}\r\n      number: ${number}\r\n    `);\r\n    this.props.formSubmitHandler({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n    \r\n    render() {\r\n        return (\r\n             <form onSubmit={this.handleSubmit}>\r\n          Name\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n          <br />\r\n          Number\r\n          <br />\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n          <br />\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Filter =({value, onChange}) => (\r\n      <label>\r\n          Find contacts by name\r\n          <br />\r\n          <input type=\"text\" value={value} onChange={onChange} />\r\n        </label>\r\n)\r\n\r\nexport default Filter;","import React from 'react';\r\n// import shortid from 'shortid';\r\n\r\nconst ContactList = ({visibleContact, onDeleteCont}) => (\r\n  \r\n    <ul>\r\n        {visibleContact.map(({id, name, number }) => (\r\n            <li key={id}>\r\n                {name}:<span>{number}</span>\r\n                <button type=\"button\" onClick={()=>onDeleteCont(id)}>Delete</button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default ContactList;\r\n /* was: this.state.contact */","import '../App/App.css';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport initialContact from '../data/start-data.json';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nclass App extends Component {\n  state = {\n    contact: initialContact,\n    filter: '',\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    const cont = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const checkName = Object.values({ name })[0];\n    if (this.state.contact.some(item => item.name === `${checkName}`)) {\n      alert(`${checkName} is already in contacts`);\n      return;\n    }\n    this.setState(prevState => {\n      const contact = [...prevState.contact, cont];\n      return {\n        contact,\n        filter: '',\n        name: '',\n        number: '',\n      };\n    });\n    console.log('Arr', this.state.contact);\n  };\n\n  changeFilter = e => {\n    console.log(e.currentTarget.value);\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  onDeleteCont = id => {\n    console.log(id);\n    this.setState(prevState => ({\n      contact: prevState.contact.filter(con => con.id !== id),\n    }));\n  };\n  // filter создаёт НОВЫЙ массив, в который войдут только те элементы arr, для которых вызов callback(item, i, arr) возвратит true.\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const visibleContact = this.state.contact.filter(con =>\n      con.name.toLowerCase().includes(normalizedFilter),\n    );\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <br />\n        <ContactForm formSubmitHandler={this.formSubmitHandler} />\n        <br />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <br />\n        <ContactList visibleContact={visibleContact} onDeleteCont={this.onDeleteCont} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}